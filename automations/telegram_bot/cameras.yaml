- alias: Telegram camera list
  initial_state: 'on'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
    event_data:
      data: "/cameras"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: ""
    - service: telegram_bot.edit_message
      data_template:
        message_id: "{{ trigger.event.data.message.message_id }}"
        chat_id: "{{ trigger.event.data.chat_id }}"
        message: >-
          {{ "\U0001F4F9" }} Choose a camera
          
          {{ "\U0000202F" * 74 }}{{ "\U0000FEFF" }}
        inline_keyboard:
          - "Front gate:/snapshot front_gate, Front door:/snapshot front_door"
          - "Kitchen Side:/snapshot kitchen_side, Porch Roof:/snapshot porch_roof"
          - "Side Passage:/snapshot side_passage, Back garden:/snapshot back_garden"
          - "\U0001F3E0 Main menu:/menu_callback"

- alias: Telegram camera snapshot
  initial_state: 'on'
  hide_entity: true
  trigger:
    platform: event
    event_type: telegram_callback
  condition:
    - condition: template
      value_template: "{{ trigger.event.data.data.startswith('/snapshot ') }}"
  action:
    - service: telegram_bot.answer_callback_query
      data_template:
        callback_query_id: "{{ trigger.event.data.id }}"
        message: "Getting snapshot from the camera..."   
    - service: telegram_bot.send_photo
      data_template:
        target: "{{ trigger.event.data.chat_id }}"
        url: "http://localhost:8123{{ states.camera[trigger.event.data.data.split(' ', 1)[1]].attributes.entity_picture }}"
        caption: "{{ states.camera[trigger.event.data.data.split(' ', 1)[1]].name }}"
        inline_keyboard:
          - "\U0001F4F9 New snapshot:{{ trigger.event.data.data }}"